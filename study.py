print(0x76)
print(bin(118))
print(hex(118))

print(int('76', 16))  # 第一个是参数第二个是进制数,int来创建整数

print(0.123456789)

print(float(123456))  # float来创建浮点数，123456.0

print(2.4e8)  # 240000000.0
print(2.0e-4)  # 0.0002

"""
decimal用于处理十进制的浮点数运算
fractions用于处理分数
"""
from decimal import Decimal

print(Decimal('1.2') + Decimal('2.2'))

from fractions import Fraction

print(Fraction(22, 10) + Fraction(33, 10))

"""布尔类型"""
"""
1.布尔类型只有两种取值 True,False
2.True的值为1，False的值为0
"""
print(5 > 3)

print(True == 1)

print(True + 5)

"""整数除运算符
用于计算一个数值是另一个数值的多少倍
"""
print(9 // 4)  # 2
print(-3 * -4)  # 12

# 9 = (-4) * (-3) + (-3)
print(9 // -4)  # -3
""" 0<余数<除数 """

"""
取余运算符用%表示
a%b = a - b * 倍数 = a - b * (a // b) = 余数
a对b取余就是计算a最多可以容纳多少个b，多出来的就是余数
"""
print(9 % 4)  # 1

"""幂运算符
1.用两个**表示
2.内置函数pow也可以实现幂运算符

"""
print(3 ** 2)
print(pow(3, 2))

"""布尔运算符
运算结果仍然是一个布尔运算符
1.and
2.or
3.not

"""
print(True and False)
print(True or False)
print(not True)

"""赋值运算符合变量
赋值运算符用=表示，=的左边是变量，=的右边是对象
在Python中，一切皆为对象
变量相当于标签。对于赋值语句：变量 = 对象 ，相当于给对象贴了一个标签，标签名就是变量名

变量是没有数据类型的，只有对象是有数据类型的
"""
"""
链式赋值
"""
a = b = c = 18
print(a)
print(b)
print(c)

"""
参数赋值，支持+= ；—= ；*= ；/= ;

"""
a = 3

a += 5

print(a)

"""比较运算符
比较运算符用于比较两个运算数，比较结果是一个布尔值

1.== 用于比较两个运算数是否相等，==’相等性‘测试
2.is 用于比较两个运算数是否是同一个对象，is ’同一性‘测试
"""
a = b = [1, 2, 3]
c = [1, 2, 3]

print(a == b)
print(a == c)
print(a is b)
print(a is c)
print(8 is 8.0)
print(8 == 8.0)

"""不可变类型对象的is比较
对于不可变类型的对象，其内存可能会被重用，比如数值较小的整数对象。
可以调用内置函数id进行验证。内置函数id用于返回对象的唯一标识（对象在内存中的地址）

"""

a = 18
b = 18
print(id(a))
print(id(b))
print(a is b)

'''比较运算符可以用于链式比较'''
a = 28

print(0 < a < 30)

'''关键字
    所谓关键字，就是Pytho语言定义的，具有特殊用途的单词。
    通过内置的函数help（）查看所有关键字
    help> keywords
'''
'''标识符
    所谓标识符，就是给程序中的变量、函数、方法、类等命名的名字。
    标识符的命名规则（必须这样命名）：
    （1）区分大小写
    （2）不能是关键字
    （3）不能以数字开头
    （4）不能包含空、制表符、数学符号、中划线、箭头等

    标识符的命名规范
    （1）“见明知意”，由一个或者多个有意义的单词组合而成。
    （2）所有单词全部小写，单词之间用下划线进行分隔。
        例如：student_name,return_result
'''
"""对象None
1.对象None用于表示数据值的不存在。
    对象None是占据一定的内存空间的，它并不意味着“空”或者“没有定义”
    也就是说，None是“something”，而不是“nothing”

2.对象None经常用于变量的初始化，或将变量重置为“数据值不存在”的状态
"""